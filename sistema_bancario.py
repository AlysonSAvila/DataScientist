# -*- coding: utf-8 -*-
"""Sistema Bancario.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1M7j_hIz5a1Gv6luy6qUFtfRCp75Pb3DD
"""

#Desafio Bootcamp Potência Tech - Ciência de Dados
#Criar um sistema bancário com cadastros de clientes, de conta e com 3 operações, depósito, saque e extrato

#Inicializar base de clientes e contas
clientes = {}
contas = {}
numero_conta = 1

#Função para armazenar um usuário
def cadastrar_cliente (clientes):
  continuar = True
  while(continuar):
    cpf = input('Digite o CPF do cliente: ')
    clientes.setdefault(cpf)
    parametros = ('Nome', 'Data de Nascimento', 'Endereço')
    clientes[cpf] = dict.fromkeys(parametros)
    nome = input('Digite o nome do cliente: ')
    clientes[cpf]['Nome'] = nome
    data_nasc = input('Digite a data de nascimento do cliente: (DD/MM/AAA) ')
    clientes[cpf]['Data de Nascimento'] = data_nasc
    endereco = input('Digite o endereço do cliente: (Logradouro, Nro-Bairro-Cidade/UF) ')
    clientes[cpf]['Endereço'] = endereco
    sair = input('Deseja sair? S/N ')
    continuar = not(sair == 'S')

  return clientes

#Função para criação de conta
def criar_conta (clientes, contas, numero_conta):
  agencia = "1000"
  continuar = True
  while (continuar):
    cpf = input('Digite o CPF do cliente: ')
    if cpf in clientes:
      contas.setdefault(numero_conta)
      parametros = ('dados')
      contas[numero_conta] = {'Dados': None}
      contas[numero_conta]['Dados'] = {'Usuário': cpf, 'Saldo': 0, 'Extato': ''}
      numero_conta += 1
    else:
      print('Cliente não cadastrado na base, por favor, faça o cadastro e tente novamente. ')

    sair = input('Deseja sair? S/N ')
    continuar = not(sair == 'S')

  return contas

#Criar funções de saque, depósito e extrato

def sacar (saldo, valor, extrato, limite_saque, numero_saque):
  if numero_saques >= limite_saques:
    print("Transação negada, você ultrapassou seu limite de ", limite_saques," por dia.")
  if saldo < valor:
    print("Transação negada, você não possui saldo para este saque, seu saldo é de R$", saldo)
  elif valor > 500:
    print('Transação negada, seu limite é de R$500 por saque.')
  else:
    saldo = saldo - valor
    extrato = extrato + "Saque de R$" + str(valor) + "/n"
    numero_saques = numero_saques + 1

  return saldo, extrato

def depositar (saldo, valor, extrato)
  extrato = extrato + ("Depósito: R$",valor,"/n")
  saldo = saldo + valor

  return saldo, extrato

def emitir_extrato (saldo, extrato):
  if extrato == "":
    print("Não foram realizadas movimentações.")
  print(extrato)
  print("Seu saldo é de R$", saldo)

  return extrato

